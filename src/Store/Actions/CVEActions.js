import * as CVEHelper from '../../Helpers/CVE/CVEHelper';
import * as ActionTypes from '../../Store/ActionTypes';
import { CVEReducer } from '../../Store/Reducers/CVEStore';
import ReducerRegistry from '../../Utilities/ReducerRegistry';

ReducerRegistry.register({ CVEStore: CVEReducer });

export const fetchCVEListFromVMaaS = apiProps => ({
    type: ActionTypes.FETCH_CVES,
    payload: new Promise(resolve => {
        resolve(CVEHelper.getVMaaSCVEs(apiProps));
    })
});

export const fetchAffectedSystemsByCVE = apiProps => ({
    type: ActionTypes.FETCH_AFFECTED_SYSTEMS_BY_CVE,
    payload: new Promise(resolve => {
        resolve(CVEHelper.getAffectedSystemsByCVE(apiProps));
    }).then(result => result)
});

export const searchCVEs = value => ({
    type: ActionTypes.FILTER_CVES,
    payload: new Promise(resolve => {
        resolve(value);
    })
});

export const fetchCveDetails = synopsis => ({
    type: ActionTypes.FETCH_CVE_DETAILS,
    payload: new Promise(resolve => {
        resolve(CVEHelper.getCveDetails(synopsis));
    }).then(result => result)
});
