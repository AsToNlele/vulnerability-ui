import ReducerRegistry from 'Utilities/ReducerRegistry';
import { getDummyCVEs, getVMaaSCVEs } from 'Helpers/CVE/CVEHelper';

// Action Types
const types = {
    FETCH_CVES: 'CVE_FETCH_DATA',
    FILTER_CVES: 'CVE_FILTER'
};

// Initial State
const initialState = {
    cveList: [],
    filterValue: '',
    isLoading: true
};

// Action creators

export const fetchCVEList = () => ({
    type: types.FETCH_CVES,
    payload: new Promise((resolve) => {
        resolve(getDummyCVEs());
    })
});

export const fetchCVEListFromVMaaS = () => ({
    type: types.FETCH_CVES,
    payload: new Promise((resolve) => {
        resolve(getVMaaSCVEs());
    })
});

export const searchCVEs = value => ({
    type: types.FILTER_CVES,
    payload: new Promise((resolve) => {
        resolve(value);
    })
});

// Reducer
const getCVEReducer = (state = initialState, action) => {
    switch (action.type) {
        case types.FETCH_CVES + '_PENDING':
            return {
                ...state,
                isLoading: true
            };
        case types.FETCH_CVES + '_FULFILLED':
            return {
                ...state,
                cveList: action.payload,
                isLoading: false
            };
        case types.FILTER_CVES + '_FULFILLED':
            return {
                ...state,
                filterValue: action.payload
            };
        default:
            return state;
    }
};

ReducerRegistry.register({ cveList: getCVEReducer });
