import React from 'react';
import './VulnerabilitiesOverview.scss';
import { Table, Pagination } from '@red-hat-insights/insights-frontend-components';
import { connect } from 'react-redux';
import { withRouter } from 'react-router-dom';
import { fetchCVEsWithSystems } from '../../../Store/Actions/CVEActions';
import { sExposedSystemsTable } from '../../../Helpers/Selectors/CVESelectors';
import propTypes from 'prop-types';

class SystemsExposedTable extends React.Component {
    constructor(props) {
        super(props);
    }

    componentDidMount() {
        this.props.fetchData();
    }
    handleRedirect(key) {
        this.props.history.push('/vulnerabilities/cves/' + this.props.cveTableRows[key].synopsis);
    }
    render() {
        return (
            <React.Fragment>
                <Table header={[]} rows={this.props.cveTableRows} />
                <Pagination numberOfItems={this.props.cveTableRows ? this.props.cveTableRows.length : 1} itemsPerPage={50} />
            </React.Fragment>
        );
    }
}
function mapStateToProps(state) {
    return {
        cve: state.CVEStore.cveListWithSystems,
        cveTableRows: sExposedSystemsTable(state)
    };
}

const mapDispatchToProps = dispatch => {
    return {
        fetchData: () => dispatch(fetchCVEsWithSystems())
    };
};

SystemsExposedTable.propTypes = {
    history: propTypes.object,
    cveTableRows: propTypes.array,
    fetchData: propTypes.func
};

export default withRouter(
    connect(
        mapStateToProps,
        mapDispatchToProps
    )(SystemsExposedTable)
);
