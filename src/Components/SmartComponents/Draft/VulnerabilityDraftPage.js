import React, {Component} from 'react';
import {Alert} from '@red-hat-insights/insights-frontend-components';
import {Link, RouteComponentProps as RouteProps, withRouter} from 'react-router-dom';
import {Button} from '@patternfly/react-core';
import {Card} from '@red-hat-insights/insights-frontend-components';
import {CardContent} from '@red-hat-insights/insights-frontend-components';
import {CardFooter} from '@red-hat-insights/insights-frontend-components';
import {CardHeader} from '@red-hat-insights/insights-frontend-components';
import {PageHeader} from '@red-hat-insights/insights-frontend-components';
import {PageHeaderTitle} from '@red-hat-insights/insights-frontend-components';
import {PF3Button} from '@red-hat-insights/insights-frontend-components';
import {Section} from '@red-hat-insights/insights-frontend-components';
import ContentTable, {getExample} from "Components/SmartComponents/ContentTable/ContentTable";
import SimpleSearch from "Components/SmartComponents/ContentTable/SimpleSearch";
import {connect} from "react-redux";
import {fetchCVEList, fetchCVEListFromVMaaS} from "Api/VMaaS/getCves";
import {CVEProperties} from "Components/PresentationalComponents/Vulnerability/CVERow";
import CVENumberAlert from "Components/PresentationalComponents/Vulnerability/CVENumberAlert";


class VulnerabilityDraftPage extends Component<RouteProps<any> & Props, State> {

    constructor(props) {
        super(props);
        this.state = {
            filteredCves: [],
            tableHead: []
        };
    }

    fetchData() {
        var page = window.location.pathname.split('/').slice(-1)[0];
        switch (page) {
            case "vulnerabilitiesDummy":
                this.props.fetchDataDummy();
                break;
            case "vulnerabilitiesVmaas":
                this.props.fetchDataVMaaS();
                break;
            default:
                this.props.fetchDataDummy();
        }
    }

    componentWillReceiveProps({cveList, searchFilter}) {
        var filteredCves = cveList.filter((row) => {
            var stringC = row.props["synopsis"].props.children;
            return stringC.indexOf(searchFilter) !== -1;
        });

        var tableHead = Object.keys(CVEProperties).map((value) => <th key={value}>{CVEProperties[value]}</th>);
        this.setState({
            filteredCves: filteredCves,
            tableHead: tableHead
        })
    }

    componentDidMount() {
        this.fetchData();
    }

    handleRedirect(url) {
        this.props.history.push(url);
        this.fetchData();
    }

    render() {
        return (
            <div className='pf-l-stack'>
                <div className='pf-l-stack__item pf-m-secondary '>
                    <PageHeader>
                        <PageHeaderTitle title="Vulnerabilities"/>
                    </PageHeader>
                </div>

                <Section type='content'>
                    <div className="pf-l-gallery ">
                        <div className="pf-l-gallery__item">
                            <Button
                                variant="primary"
                                onClick={() => this.handleRedirect("/vulnerabilities")}>
                                Static data
                            </Button>
                        </div>
                        <div className="pf-l-gallery__item">
                            <Button
                                variant="primary"
                                onClick={() => this.handleRedirect("/vulnerabilitiesVmaas")}>
                                VMaaS data
                            </Button>
                        </div>
                    </div>
                    <div className="pf-l-grid pf-m-gutters">
                        <div className="pf-l-grid__item pf-m-8-col">
                            <div className="pf-c-card " style={{minHeight: "152px"}}>
                                <div className="pf-c-card__body " style={{lineHeight: "152px"}}>
                                    <div className="pf-l-stack__item pf-m-primary pf-m-gutter">
                                        <SimpleSearch/>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div className="pf-l-grid__item pf-m-4-col">
                            <div className="pf-c-card ">
                                <div className="pf-c-card__body ">
                                    <CVENumberAlert filteredNumber={this.state.filteredCves.length}
                                                    allNumber={this.props.cveList.length}/>
                                </div>
                            </div>
                        </div>
                        <br/>
                    </div>
                    <div className="pf-l-stack__item pf-m-primary pf-m-gutter">
                        <ContentTable filteredCves={this.state.filteredCves} isLoading={this.props.isLoading}
                                      tableHead={this.state.tableHead}/>

                    </div>
                </Section>

            </div>
        );
    }
}

function mapStateToProps(state) {
    return ({
        cveList: state.cveList.cveList,
        isLoading: state.cveList.isLoading,
        searchFilter: state.cveList.filterValue
    })

}

const mapDispatchToProps = (dispatch) => {
    return {
        fetchDataDummy: () => dispatch(fetchCVEList()),
        fetchDataVMaaS: () => dispatch(fetchCVEListFromVMaaS())
    }
};

export default withRouter(connect(mapStateToProps, mapDispatchToProps)(VulnerabilityDraftPage));
