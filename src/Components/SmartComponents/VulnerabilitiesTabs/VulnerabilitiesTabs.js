import { Tab, Tabs } from '@patternfly/react-core';
import propTypes from 'prop-types';
import React, { Component } from 'react';
import { withRouter } from 'react-router-dom';
import { paths } from '../../../Utilities/Routes';
import './VulnerabilitiesTabs.scss';

const mappings = Object.values(paths);
class VulnerabilitiesTabs extends Component {
    static propTypes = {
        location: propTypes.object,
        history: propTypes.object
    };

    constructor(props) {
        super(props);
    }

    findLocation = key => {
        return mappings.findIndex(item => item === key.replace(/\/+$/, ''));
    };

    handleRedirect = (event, tabIndex) => {
        this.props.history.push(mappings[tabIndex]);
    };

    render() {
        return (
            <React.Fragment>
                <Tabs
                    activeKey={this.findLocation(this.props.location.pathname)}
                    onSelect={this.handleRedirect}
                    className={'vulnerability-tabs'}
                >
                    <Tab eventKey={this.findLocation(paths.vulnerabilitiesCves)} title="CVEs" />
                    <Tab eventKey={this.findLocation(paths.systems)} title="Systems" />
                </Tabs>
            </React.Fragment>
        );
    }
}

export default withRouter(VulnerabilitiesTabs);
