import { Pagination, routerParams, Table } from '@red-hat-insights/insights-frontend-components';
import propTypes from 'prop-types';
import React from 'react';
import { dataShape } from '../../../Helpers/MiscHelper';
import WithLoader from '../../PresentationalComponents/WithLoader/WithLoader';
import './VulnerabilitiesCveTable.scss';

class VulnerabilitiesCveTable extends React.Component {
    constructor(props) {
        super(props);
        this.changePage = this.changePage.bind(this);
    }

    handleRedirect(key) {
        this.props.history.push('/cves/' + key);
    }

    changePage(page) {
        this.props.apply({ page });
    }

    render() {
        return (
            <React.Fragment>
                <WithLoader loading={this.props.cves.isLoading}>
                    <Table
                        header={this.props.header}
                        rows={this.props.cves.data}
                        onRowClick={(event, key) => this.handleRedirect(key)}
                        footer={
                            <Pagination
                                page={this.props.cves.meta.page}
                                numberOfItems={this.props.cves.meta.total || 1}
                                itemsPerPage={this.props.cves.meta.per_page || 10}
                                onSetPage={page => this.changePage(page)}
                            />
                        }
                    />
                </WithLoader>
            </React.Fragment>
        );
    }
}

VulnerabilitiesCveTable.propTypes = {
    cves: dataShape,
    header: propTypes.array,
    history: propTypes.object,
    apply: propTypes.func
};
export default routerParams(VulnerabilitiesCveTable);
