import { Button, Form, FormGroup, Select, SelectOption, Toolbar, ToolbarGroup, ToolbarItem } from '@patternfly/react-core';
import { DownloadIcon } from '@patternfly/react-icons';
import { routerParams, SimpleTableFilter } from '@red-hat-insights/insights-frontend-components';
import propTypes from 'prop-types';
import React from 'react';
import { connect } from 'react-redux';
import { dataShape } from '../../../Helpers/MiscHelper';
import './VulnerabilitiesCveTable.scss';

class VulnerabilitiesCveTableToolbar extends React.Component {
    constructor(props) {
        super(props);
        this.changeFilterValue = this.changeFilterValue.bind(this);
        this.changeCVSSValue = this.changeCVSSValue.bind(this);
        this.changeDateValue = this.changeDateValue.bind(this);
        this.changeDateValue = this.changeDateValue.bind(this);
        this.apply = this.apply.bind(this);
        this.state = {
            defaultConfig: {
                fetch: true,
                filter: '',
                cvss_score: 'all',
                publicDate: 'all'
            },
            toolbarConfig: {}
        };
    }

    apply() {
        this.props.apply(this.state.toolbarConfig);
    }
    changeFilterValue(value) {
        let toolbarConfig = { ...this.state.toolbarConfig, filter: value };
        this.setState({ toolbarConfig });
    }

    changeCVSSValue(value) {
        this.setState({ toolbarConfig: { ...this.state.toolbarConfig, cvss_score: value } });
    }

    changeDateValue(value) {
        let toolbarConfig = { ...this.state.toolbarConfig, publicDate: value };
        this.setState({ toolbarConfig });
    }
    render() {
        let CVSSOptions = [
            { value: 'all', label: 'All', disabled: false },
            { value: 'lt4', label: 'Lower than 4', disabled: false },
            { value: '4to6', label: '4 - 6', disabled: false },
            { value: '6to8', label: '6 - 8', disabled: false },
            { value: '8to10', label: '8 - 10', disabled: false }
        ];
        let DateOptions = [{ value: 'All', label: 'All', disabled: false }, { value: 'Other', label: 'Other', disabled: false }];
        return (
            <React.Fragment>
                <Toolbar className="cvetable-toolbar">
                    <ToolbarGroup className="filterCVES">
                        <ToolbarItem>
                            <SimpleTableFilter onFilterChange={this.changeFilterValue} onButtonClick={this.apply} />
                        </ToolbarItem>
                    </ToolbarGroup>
                    <ToolbarGroup className="space-between-toolbar-items">
                        <ToolbarItem>
                            <Form>
                                <FormGroup label="CVSS Base Score" fieldId="cvssScore">
                                    <Select
                                        id="cvssScore"
                                        onChange={this.changeCVSSValue}
                                        value={this.state.toolbarConfig.cvss_score}
                                    >
                                        {CVSSOptions.map((option, index) => (
                                            <SelectOption
                                                isDisabled={option.disabled}
                                                key={index}
                                                value={option.value}
                                                label={option.label}
                                            />
                                        ))}
                                    </Select>
                                </FormGroup>
                            </Form>
                        </ToolbarItem>
                        <ToolbarItem>
                            <Form>
                                <FormGroup label="Public date" fieldId="publicDate">
                                    <Select
                                        id="publicDate"
                                        value={this.state.toolbarConfig.publicDate}
                                        onChange={this.changeDateValue}
                                    >
                                        {DateOptions.map((option, index) => (
                                            <SelectOption
                                                isDisabled={option.disabled}
                                                key={index}
                                                value={option.value}
                                                label={option.label}
                                            />
                                        ))}
                                    </Select>
                                </FormGroup>
                            </Form>
                        </ToolbarItem>
                        <ToolbarItem>
                            <Button>Remediate with Ansible</Button>
                        </ToolbarItem>
                    </ToolbarGroup>
                    <ToolbarGroup>
                        <ToolbarItem>
                            <DownloadIcon size="md" />
                        </ToolbarItem>
                    </ToolbarGroup>
                </Toolbar>
            </React.Fragment>
        );
    }
}

VulnerabilitiesCveTableToolbar.propTypes = {
    CVETable: dataShape,
    fetchData: propTypes.func,
    applyToolbarConfig: propTypes.func,
    apply: propTypes.func
};

export default routerParams(
    connect(
        null,
        null
    )(VulnerabilitiesCveTableToolbar)
);
