import React, { Component } from 'react';
import 'Components/SmartComponents/ContentTable/content-table.scss';
import { PropagateLoader } from 'react-spinners';
import propTypes from 'prop-types';
import { Pagination } from '@red-hat-insights/insights-frontend-components/components/Pagination';
import { Bullseye } from '@patternfly/react-core';

class ContentTable extends Component {
    constructor(props) {
        super(props);
        this.fetchData = this.props.fetchData.bind(this);
    }

    render() {
        if (this.props.isLoading) {
            return (
                <Bullseye>
                    <PropagateLoader color={'#00b9e4'} loading={this.props.isLoading} />
                </Bullseye>
            );
        }

        return (
            <div className="pf-l-stack__item pf-m-gutter">
                <Pagination
                    numberOfItems={this.props.pageSize * this.props.pages}
                    page={this.props.page}
                    amountOfPages={this.props.pages}
                    itemsPerPage={this.props.pageSize}
                    onSetPage={page => this.fetchData({ page })}
                />
                <br />
                <div className="pf-l-stack pf-m-gutter">
                    <table border="1" className="content-table pf-l-stack__item pf-m-gutter" style={{ minWidth: '100%' }}>
                        <thead>
                            <tr>{this.props.tableHead}</tr>
                        </thead>
                        <tbody>{this.props.items}</tbody>
                    </table>
                </div>
            </div>
        );
    }
}

ContentTable.propTypes = {
    isLoading: propTypes.bool,
    tableHead: propTypes.array,
    items: propTypes.array,
    page: propTypes.number,
    pages: propTypes.number,
    pageSize: propTypes.number,
    fetchData: propTypes.func
};
export default ContentTable;
