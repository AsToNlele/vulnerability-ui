import { Stack, StackItem, Text, TextContent, TextVariants } from '@patternfly/react-core';
import propTypes from 'prop-types';
import React from 'react';
import { injectIntl } from 'react-intl';
import messages from '../../../Messages';
import { CVEPageContext } from '../../SmartComponents/CVEDetailsPage/CVEDetailsPage';
import WithLoader, { LoaderType } from '../WithLoader/WithLoader';

const CVEDetailsPageDescription = ({ cveAttributes, intl }) => {
    const {
        public_date: publishDate,
        description,
        rh_link: link
    } = cveAttributes;

    return (
        <CVEPageContext.Consumer>
            {context =>
                <Stack hasGutter>
                    <StackItem className="pf-u-mt-sm">
                        <div>
                            <span className="pf-u-mr-xs">{intl.formatMessage(messages.publishDate)}:</span>
                            <WithLoader
                                isLoading={context.isLoading}
                                variant={LoaderType.inlineSkeleton}
                                style={{ width: '100px' }}
                            >
                                {publishDate}
                            </WithLoader>
                        </div>
                    </StackItem>
                    <StackItem>
                        <WithLoader
                            isLoading={context.isLoading}
                            variant={LoaderType.rectangle}
                            style={{ height: '132px', width: '100%' }}
                        >
                            <TextContent style={{ textAlign: 'justify' }}>
                                <Text component={TextVariants.p}>{description}</Text>
                            </TextContent>
                        </WithLoader>
                    </StackItem>
                    <StackItem className="pf-u-mt-sm pf-u-mb-md">
                        {link}
                    </StackItem>
                </Stack>
            }
        </CVEPageContext.Consumer>

    );
};

CVEDetailsPageDescription.propTypes = {
    cveAttributes: propTypes.any,
    intl: propTypes.any
};

export default injectIntl(CVEDetailsPageDescription);
