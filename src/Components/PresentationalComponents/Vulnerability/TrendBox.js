import React from 'react';
import propTypes from 'prop-types';
import { Grid, GridItem, Split, SplitItem } from '@patternfly/react-core';
import './TrendBox.scss';

function getSnippets(props) {
    let arrowIcon;
    let color;
    if (props.direction === 'up') {
        arrowIcon = 'fa fa-arrow-up';
        color = 'trendbox-red';
    } else if (props.direction === 'down') {
        arrowIcon = 'fa fa-arrow-down';
        color = 'trendbox-green';
    } else {
        color = 'trendbox-gray';
        arrowIcon = 'fa fa-arrows-h';
    }

    return {
        number: {
            classes: 'trendbox-number ' + color,
            value: props.number
        },
        percentage: {
            classes: 'trendbox-percentage',
            icon: arrowIcon + ' ' + color,
            value: props.percentage + '%'
        },
        label: {
            classes: 'trendbox-text',
            value: props.label
        }
    };
}

const TrendBox = props => {
    let snippets = getSnippets(props);
    return (
        <Grid className="trend-box" gutter={'sm'}>
            <Split>
                <SplitItem variant="secondary" className={snippets.number.classes}>
                    <span className="push-bottom">{snippets.number.value}</span>
                </SplitItem>
                <SplitItem variant="primary" span={6} className={snippets.percentage.classes}>
                    <span className="push-bottom">
                        <i className={snippets.percentage.icon} />
                        {snippets.percentage.value}
                    </span>
                </SplitItem>
            </Split>
            <GridItem span={12} className="trendbox-text">
                {snippets.label.value}
            </GridItem>
        </Grid>
    );
};

TrendBox.propTypes = {
    number: propTypes.number,
    percentage: propTypes.number,
    direction: propTypes.string,
    label: propTypes.string
};

export default TrendBox;
