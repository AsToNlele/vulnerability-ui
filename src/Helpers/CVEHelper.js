import { LaptopIcon, LinkIcon } from '@patternfly/react-icons';
import { Ansible } from '@red-hat-insights/insights-frontend-components';
import React from 'react';
import { createApiCall } from './APIHelper';
import * as MiscHelper from './MiscHelper';

export function getCveDetails(synopsis) {
    let endpoint = '/cves/' + synopsis + '/details/';
    let result = createApiCall(endpoint, 'get');
    return result;
}

export function getAffectedSystemsByCVE(synopsis) {
    let endpoint = '/cves/' + synopsis + '/affectedsystems/';
    let result = createApiCall(endpoint, 'get');
    return result;
}

export function createExposedSystemsTable(affectedSystems) {
    let dataSet = affectedSystems.payload;
    let isLoading = affectedSystems.isLoading;
    if (!isLoading) {
        let systemList = affectedSystems.payload;
        dataSet = systemList.map(system => {
            let icon = <LaptopIcon size="lg" />;
            let ansibleIcon = (
                <a download href="../common/AnsiblePlaybook.yml">
                    <Ansible />
                </a>
            );
            return { cells: [icon, system.display_name, ansibleIcon] };
        });
    }

    dataSet = { content: dataSet, isLoading };
    return dataSet;
}

export function createCveDetailsPage(cves) {
    let dataSet = cves.payload;
    let isLoading = cves.isLoading;
    if (!isLoading) {
        let singleCve = cves.payload;
        dataSet = {
            impact: MiscHelper.processImpactForTable(singleCve.impact),
            public_date: MiscHelper.processDate(singleCve.public_date),
            description: singleCve.description,
            synopsis: singleCve.synopsis,
            errata_list: singleCve.errata_list.map(item => <li key={item}>{createErrataLink(item)}</li>),
            package_list: singleCve.package_list.map(item => <li key={item}>{item}</li>),
            url_list: linkToDatabase(singleCve.synopsis)
        };
    }

    dataSet = { content: dataSet, isLoading };
    return dataSet;
}

function createErrataLink(item) {
    return <a href={'https://access.redhat.com/errata/' + item}>{item}</a>;
}

function linkToDatabase(cve) {
    let link = 'https://access.redhat.com/security/cve/' + cve;
    return (
        <a href={link}>
            <LinkIcon title="link" /> link
        </a>
    );
}
