import saveAs from 'file-saver';
import omit from 'lodash/omit';
import propTypes from 'prop-types';

export function processCvssScore(score) {
    return score || 'N/A';
}

export function truncate(str, max) {
    return str.length > max ? str.substr(0, max - 1) + 'â€¦' : str;
}

export const dataShape = propTypes.shape({
    data: propTypes.oneOfType([propTypes.object, propTypes.array]),
    meta: propTypes.object,
    isLoading: propTypes.bool
});

export function triggerFileDownload(data) {
    let blob = new Blob([data], { type: 'text/plain;charset=utf-8' });
    saveAs(blob, new Date().toISOString() + '.txt');
}

export function verifyParameters(apiProps, allowedParams) {
    if (apiProps) {
        const newParams = omit(apiProps, Object.keys(apiProps).filter(item => !allowedParams.includes(item)));
        Object.keys(newParams).forEach(key => (newParams[key] === undefined || newParams[key] === '') && delete newParams[key]);

        return newParams;
    }
}
